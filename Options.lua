local NAME, S = ...local KCL = KethoCombatLoglocal ACR = LibStub("AceConfigRegistry-3.0")local ACD = LibStub("AceConfigDialog-3.0")local L = S.Llocal player = S.Playerlocal profile, charlocal color, spellfunction KCL:RefreshDB2()	profile, char = self.db.profile, self.db.char	color = profile.colorendlocal _G = _Glocal unpack = unpacklocal format = formatlocal function IsNotEvent(event)	return not (profile["Local"..event] or profile["Chat"..event])end	----------------	--- Defaults ---	----------------S.defaults = {	profile = { -- KethoCombatLog.db.defaults.profile		LocalTaunt = true,		LocalInterrupt = true,		LocalDeath = true,				PvE = true,		PvP = true,		World = true,				ChatWindow = 2, -- ChatFrame1		ChatChannel = 1, -- Disabled				TrimRealm = true,		Timestamp = 1, -- None		IconSize = 16,		IconCropped = true,		UnitBracesChat = true,		CriticalFormat = true,		BlizzardCombatLog = true,				FilterSelf = true,		FilterOther = true,		FilterPlayers = true,		TankTaunt = true,		TankBreak = true,		FriendlyDispel = true,		HostileDispel = true,		Spellsteal = true,				color = {			Taunt = {1, 0, 0}, -- #FF0000 (Red)			Interrupt = {0, 110/255, 1}, -- #006EFF (something Blue)			Juke = {1, 1, 1},			Dispel = {1, 1, 1},			Reflect = {1, 1, 1},			CrowdControl = {1, 1, 1},			Break = {1, 1, 1},			Death = {1, 1, 1},			Save = {1, 1, 1},			Resurrect = {175/255, 1, 47/255}, -- #ADFF2F (GreenYellow)			-- Constants.lua: SCHOOL_MASK_PHYSICAL, ...			Physical = {1.00, 1.00, 0.00}, -- #FFFF00			Holy = {1.00, 0.90, 0.50}, -- #FFE680			Fire = {1.00, 0.50, 0.00}, -- #FF8000			Nature = {0.30, 1.00, 0.30}, -- #4DFF4D			Frost = {0.50, 1.00, 1.00}, -- #80FFFF			Shadow = {0.50, 0.50, 1.00}, -- #8080FF			Arcane = {1.00, 0.50, 1.00}, -- #FF80FF			-- /dump COMBATLOG_DEFAULT_COLORS.unitColoring[COMBATLOG_FILTER_FRIENDLY_UNITS]			Friendly = {0.34, 0.64, 1.00}, -- #57A3FF			Hostile = {0.75, 0.05, 0.05}, -- #BF0D0D			Unknown = {191/255, 191/255, 191/255}, -- #BFBFBF			Timestamp = {0.67, 0.67, 0.67},		},				message = {			Taunt = L.MSG_TAUNT,			Taunt_AoE = L.MSG_TAUNT_AOE,			Growl = L.MSG_GROWL,						Interrupt = L.MSG_INTERRUPT,			Juke = L.MSG_JUKE,						Dispel = L.MSG_DISPEL,			Cleanse = L.MSG_CLEANSE,			Spellsteal = L.MSG_SPELLSTEAL,						Reflect = L.MSG_REFLECT,			Miss = L.MSG_MISS,						CrowdControl = L.MSG_CROWDCONTROL,			Break = L.MSG_BREAK,			Break_NoSource = L.MSG_BREAK_NOSOURCE,			Break_Spell = L.MSG_BREAK_SPELL,						Death = L.MSG_DEATH,			Death_Melee = L.MSG_DEATH_MELEE,			Death_Environmental = L.MSG_DEATH_ENVIRONMENTAL,			Death_Instakill = L.MSG_DEATH_INSTAKILL,						Save = L.MSG_SAVE,			Resurrect = L.MSG_RESURRECT,		},				sink20OutputSink = "None",	},}local defaults = S.defaultsfor k, v in pairs(CUSTOM_CLASS_COLORS or RAID_CLASS_COLORS) do	-- this seems to be safe, ie seperate table references	defaults.profile.color[k] = vend	---------------	--- Options ---	---------------S.options = {	type = "group",	childGroups = "tab",	name = format("%s |cffADFF2Fv%s|r", "Ketho |cffFFFFFFCombatLog|r", S.VERSION),	args = {		Main = {			type = "group", order = 1,			name = "|TInterface\\Icons\\INV_Sword_01:16:16:0:-1"..S.crop.."|t  Main",			handler = KCL,			get = "GetValue", set = "SetValue",			disabled = "OptionsDisabled",			args = {				Local = {					type = "group", order = 1,					inline = true,					name = function() return profile.ChatFilter and "|cff71D5FFLocal|r" or " " end,					args = {}, -- populated later				},				Chat = {					type = "group", order = 2,					inline = true,					name = function() return profile.ChatFilter and "|cff71D5FF"..CHAT.."|r" or " " end,					hidden = function() return not profile.ChatFilter end,					args = {}, -- populated later				},				spacing = {type = "description", order = 3, name = ""},				PvE = {					type = "toggle", order = 4,					width = "half", descStyle = "",					name = " |cffA8A8FFPvE|r", -- /dump ChatTypeInfo.PARTY {r = 0.666, g = 0.666, b = 1.000}					set = "SetValue_Instance",				},				PvP = {					type = "toggle", order = 5,					width = "half", descStyle = "",					name = " |cffFF7F00"..PVP.."|r", -- /dump ChatTypeInfo.RAID {r = 1.000, g = 0.498, b = 0.000}					set = "SetValue_Instance",				},				World = {					type = "toggle", order = 6,					width = "half", descStyle = "",					name = " World",					set = "SetValue_Instance",				},				ChatFilter = {					type = "toggle", order = 7,					descStyle = "",					name = "|cff71D5FF"..CHAT.." "..FILTERS.."|r",				},				newline1 = {type = "description", order = 8, name = ""},				ChatWindow = {					type = "select", order = 9,					descStyle = "",					name = "   |cffFFFFFF"..CHAT.." Window|r",					values = function()						local ChatWindowList = {"|cffFF0000<"..ADDON_DISABLED..">|r"}						for i = 1, NUM_CHAT_WINDOWS do							local window = GetChatWindowInfo(i)							if window ~= "" then								ChatWindowList[i+1] = "|cff2E9AFE"..i..".|r  "..window							end						end						return ChatWindowList end,					set = function(i, v)						profile.ChatWindow = v						if v > 1 then							S.ChatFrame = _G["ChatFrame"..v-1]							S.ChatFrame:AddMessage("|cffADFF2FKetho CombatLog|r: Chat Frame |cff57A3FF"..(v-1)..".|r |cffADFF2F"..GetChatWindowInfo(v-1).."|r")						end					end,				},				ChatChannel = {					type = "select", order = 10,					descStyle = "",					name = "   |cffFFFFFF"..CHAT.." "..CHANNEL.."|r",					values = function()						local ChatChannelList = {							"|cffFF0000<"..ADDON_DISABLED..">|r",							"|cff2E9AFE#|r   "..CHAT_MSG_SAY,							"|cff2E9AFE#|r   |cffFF4040"..CHAT_MSG_YELL.."|r",							"|cff2E9AFE#|r   |cffA8A8FF"..CHAT_MSG_PARTY.."|r / |cffFF7F00"..CHAT_MSG_RAID.."|r",						}						for i = 1, 10 do							local channelID = select((i*2)-1, GetChannelList())							if channelID then								ChatChannelList[channelID+4] = "|cff2E9AFE"..channelID..".|r  "..select(i*2,GetChannelList())							end						end						return ChatChannelList					end,					set = function(i, v)						profile.ChatChannel = v						KCL:GROUP_ROSTER_UPDATE() -- update channel					end,				},				descEnable = {					type = "description", order = 13,					fontSize = "large",					name = function() return not KCL:IsEnabled() and " Type |cff2E9AFE/ket on|r to enable" or "" end,				},			},		},		Advanced = {			type = "group", order = 2,			name = "|TInterface\\Icons\\Trade_Engineering:16:16:0:-1"..S.crop.."|t  "..ADVANCED_LABEL,			handler = KCL,			get = "GetValue", set = "SetValue",			args = {				Advanced = {					type = "group", order = 1,					name = "|TINTERFACE\\ICONS\\inv_misc_orb_05:14:14:1:0"..S.crop.."|t  |cffFFFFFF"..ADVANCED_LABEL.."|r",					args = {						header1 = {type = "header", order = 1, name = "Icons"},						IconCropped = {							type = "toggle", order = 2,							descStyle = "",							name = "|TInterface\\Icons\\inv_misc_orb_05:20:20:1:0|t -> |TInterface\\Icons\\inv_misc_orb_05:20:20:1:0:64:64:4:60:4:60|t  Crop",							disabled = function() return profile.IconSize == 1 end,							set = function(i, v) profile.IconCropped = v								S.crop = v and ":64:64:4:60:4:60" or ""							end,						},						IconSize = {							type = "select", order = 3,							descStyle = "", 							name = "|cffFFFFFF"..EMBLEM_SYMBOL.." Size|r",							values = S.IconValues,						},						header2 = {type = "header", order = 5, name = "Message "..FORMATTING},						Timestamp = {							type = "select", order = 6,							desc = OPTION_TOOLTIP_TIMESTAMPS,							values = S.xmpl_timestamps,							name = " "..TIMESTAMPS_LABEL,						},						TrimRealm = {							type = "toggle", order = 7,							width = "full", desc = player.name.."|cffFF0000-"..GetRealmName().."|r",							name = "|cff71D5FFTrim Realm Names|r",						},						UnitBracesLocal = {							type = "toggle", order = 8,							width = "full", desc = UNIT_NAMES_SHOW_BRACES_COMBATLOG_TOOLTIP,							name = "|cff71D5FF"..SHOW_BRACES.."|r (Local)",						},						UnitBracesChat = {							type = "toggle", order = 9,							width = "full", desc = UNIT_NAMES_SHOW_BRACES_COMBATLOG_TOOLTIP,							name = "|cff71D5FF"..SHOW_BRACES.."|r ("..CHAT..")",						},						header3 = {type = "header", order = 10, name = DAMAGE.." "..FORMATTING},						OverkillFormat = {							type = "toggle", order = 11,							desc = "<message> |cff71D5FF"..TEXT_MODE_A_STRING_RESULT_OVERKILLING.."|r",							name = gsub(TEXT_MODE_A_STRING_RESULT_OVERKILLING, "[%%d ()]", ""),						},						CriticalFormat = {							type = "toggle", order = 12,							desc = "<message> |cff71D5FF"..TEXT_MODE_A_STRING_RESULT_CRITICAL.."|r",							name = gsub(TEXT_MODE_A_STRING_RESULT_CRITICAL, "[()]", ""),						},						GlancingFormat = {							type = "toggle", order = 13,							desc = "<message> |cff71D5FF"..TEXT_MODE_A_STRING_RESULT_GLANCING .."|r",							name = gsub(TEXT_MODE_A_STRING_RESULT_GLANCING, "[()]", ""),						},						CrushingFormat = {							type = "toggle", order = 14,							desc = "<message> |cff71D5FF"..TEXT_MODE_A_STRING_RESULT_CRUSHING.."|r",							name = gsub(TEXT_MODE_A_STRING_RESULT_CRUSHING, "[()]", ""),						},						header4 = {type = "header", order = 15, name = OTHER},						BlizzardCombatLog = {							type = "toggle", order = 16,							desc = BINDING_NAME_TOGGLECOMBATLOG,							width = "full",							name = "|cff2E9AFEBlizzard CombatLog|r",							set = function(i, v) profile.BlizzardCombatLog = v								COMBATLOG[v and "RegisterEvent" or "UnregisterEvent"](COMBATLOG, "COMBAT_LOG_EVENT")								print("Blizzard CombatLog: "..(v and "|cffB6CA00"..VIDEO_OPTIONS_ENABLED.."|r" or "|cffFF2424"..VIDEO_OPTIONS_DISABLED.."|r"))							end,						},					},				},				Filter = {					type = "group", order = 2,					name = "|TInterface\\Icons\\Spell_Holy_Silence:14:14:1:0"..S.crop.."|t  |cffFFFFFF"..FILTERS.."|r",					args = {						header1 = {type = "header", order = 1, name = COMBAT_LOG_MENU_BOTH},						FilterSelf = {							type = "toggle", order = 2,							width = "full", descStyle = "",							name = "|cff"..player.color..YOU.."|r",							set = function(i, v) profile.FilterSelf = v								-- toggle between filters								if not v then profile.FilterOther = true end							end,						},						FilterOther = {							type = "toggle", order = 3,							width = "full", descStyle = "",							name = OTHER,							set = function(i, v) profile.FilterOther = v								if not v then profile.FilterSelf = true end							end,						},						header2 = {type = "header", order = 4, name = BY_SOURCE.." "..TYPE},						FilterPlayers = {							type = "toggle", order = 5,							width = "full", descStyle = "",							name = "|cff57A3FF"..TUTORIAL_TITLE19.."|r",							set = function(i, v) profile.FilterPlayers = v								if not v then profile.FilterMonsters = true end							end,						},						FilterMonsters = {							type = "toggle", order = 6,							width = "full", descStyle = "",							name = "|cff3FBF3FNPCs|r",							set = function(i, v) profile.FilterMonsters = v								if not v then profile.FilterPlayers = true end							end,						},						header3 = {type = "header", order = 8, name = " |TInterface\\LFGFRAME\\UI-LFG-ICON-ROLES:20:20:-2:0:256:256:1:65:68:132|t "..TANK},						TankTaunt = {							type = "toggle", order = 9,							width = "full", descStyle = "",							name = function() return " |TInterface\\Icons\\Spell_Nature_Reincarnation:16:16:1:0"..S.crop.."|t  |cff6FAFE6"..TANK.."|r "..S.EventString.Taunt[1] end,							disabled = function() return IsNotEvent("Taunt") end,						},						TankBreak = {							type = "toggle", order = 10,							width = "full", descStyle = "",							name = function() return " |TInterface\\Icons\\Ability_Seal:16:16:1:0"..S.crop.."|t  |cff6FAFE6"..TANK.."|r "..S.EventString.Break[1] end,							disabled = function() return IsNotEvent("Break") end,						},						PetGrowl = {							type = "toggle", order = 11,							width = "full", descStyle = "",							name = " |TInterface\\Icons\\Ability_Physical_Taunt:16:16:1:0"..S.crop.."|t  |cffABD473"..PET.."|r "..GetSpellInfo(2649),						},						header4 = {type = "header", order = 12, name = "|TInterface\\Icons\\Spell_Holy_DispelMagic:16:16:1:0"..S.crop.."|t  "..DISPELS},						FriendlyDispel = {							type = "toggle", order = 13,							width = "full", descStyle = "",							name = " |TInterface\\Icons\\Spell_Holy_Purify:16:16:1:0"..S.crop.."|t  "..FRIENDLY.." (|cff71D5FF"..ACTION_SPELL_DISPEL_DEBUFF.."|r)",							disabled = function() return IsNotEvent("Dispel") end,						},						HostileDispel = {							type = "toggle", order = 14,							width = "full", descStyle = "",							name = " |TInterface\\Icons\\Spell_Nature_Purge:16:16:1:0"..S.crop.."|t  "..HOSTILE.." (|cff71D5FF"..ACTION_SPELL_DISPEL_BUFF.."|r)",							disabled = function() return IsNotEvent("Dispel") end,						},						Spellsteal = {							type = "toggle", order = 15,							width = "full", descStyle = "",							name = " |TInterface\\Icons\\Spell_Arcane_Arcane02:16:16:1:0"..S.crop.."|t  "..S.EventString.Spellsteal[1],							disabled = function() return IsNotEvent("Dispel") end,						},						header5 = {type = "header", order = 20, name = "|TInterface\\Icons\\Ability_Marksmanship:14:14:1:0"..S.crop.."|t  "..MISSES},						MissAll = {							type = "toggle", order = 21,							width = "full", descStyle = "",							name = " |TInterface\\Icons\\Spell_ChargePositive:16:16:1:0"..S.crop.."|t  |cff71D5FF"..ALL.." "..MISSES.."|r",						},						header6 = {type = "header", order = 30, name = "|TInterface\\Icons\\Spell_Holy_Resurrection:14:14:1:0"..S.crop.."|t  "..RESURRECT},						BattleRez = {							type = "toggle", order = 31,							width = "full", descStyle = "",							name = " |TInterface\\Icons\\Spell_Nature_Reincarnation:16:16:1:0"..S.crop.."|t  Only Battle Rezzes",						},					},				},				Coloring = {					type = "group", order = 3,					name = "|TInterface\\Icons\\INV_Misc_Gem_Variety_02:14:14:1:0"..S.crop.."|t  |cffFFFFFF"..COLORS.."|r",					get = "GetColor",					args = { -- populated later						ColorEnemy = {							type = "toggle", order = 1,							descStyle = "",							name = function() return "|cff"..S.GeneralColor.Hostile..ENEMY.."|r "..CLASS_COLORS end,							get = "GetValue", set = "SetValue",						},						Physical = {							type = "color", order = 41,							name = "|TInterface\\Icons\\Spell_Nature_Strength:16:16:1:0"..S.crop.."|t  "..STRING_SCHOOL_PHYSICAL,							set = "SetSchoolColor",						},						Friendly = {							type = "color", order = 51,							width = "full",							name = "|TInterface\\Icons\\Spell_ChargePositive:16:16:1:0"..S.crop.."|t  "..FRIENDLY,							set = "SetGeneralColor",						},						Hostile = {							type = "color", order = 52,							width = "full",							name = "|TInterface\\Icons\\Spell_ChargeNegative:16:16:1:0"..S.crop.."|t  "..HOSTILE,							set = "SetGeneralColor",						},						Unknown = {							type = "color", order = 53,							width = "full",							name = "|TInterface\\Icons\\INV_Misc_QuestionMark:16:16:1:0"..S.crop.."|t  "..UNKNOWN,							set = "SetGeneralColor",						},						Timestamp = {							type = "color", order = 55,							width = "full",							name = "|TInterface\\Icons\\Spell_Holy_BorrowedTime:16:16:1:0"..S.crop.."|t  "..TIMESTAMPS_LABEL,							set = "SetGeneralColor",						},						spacing = {type = "description", order = 60, name = ""},						Reset = {							type = "execute", order = 61,							name = RESET, descStyle = "",							confirm = true, confirmText = RESET_TO_DEFAULT.."?",							func = function()								for k1, v1 in pairs(defaults.profile.color) do									for k2, v2 in pairs(v1) do -- class colors not sequential										profile.color[k1][k2] = v2									end								end								KCL:WipeCache()							end,						},					},				},				Message = {					type = "group",					order = 4,					name = "|TInterface\\Icons\\INV_Misc_Book_07:14:14:1:0"..S.crop.."|t  |cffFFFFFF"..MESSAGE_TYPES.."|r",					get = "GetMessage", set = "SetMessage",					args = {}, -- populated later				},				LibSink = KCL:GetSinkAce3OptionsDataTable(),			},		},	},}local options = S.options	---------------	--- Methods ---	---------------function KCL:OptionsDisabled()	return not self:IsEnabled()endfunction KCL:GetValue(i)	return profile[i[#i]]endfunction KCL:SetValue(i, v)	profile[i[#i]] = vendfunction KCL:SetValue_Instance(i, v)	profile[i[#i]] = v	self:ZONE_CHANGED_NEW_AREA() -- update CLEUendfunction KCL:GetMessage(i)	return profile.message[i[#i]]endfunction KCL:SetMessage(i, v)	profile.message[i[#i]] = (v:trim() == "") and defaults.profile.message[i[#i]] or vendfunction KCL:GetColor(i)	return unpack(color[i[#i]])endfunction KCL:GetClassColor(i)	local c = color[i[#i]]	return c.r, c.g, c.bendfunction KCL:SetColor(i, r, g, b)	local c = color[i[#i]]	c[1] = r	c[2] = g	c[3] = bendfunction KCL:SetGeneralColor(i, r, g, b)	self:SetColor(i, r,g,b)	S.GeneralColor[i[#i]] = nilendfunction KCL:SetClassColor(i, r, g, b)	local c = color[i[#i]]	c.r = r	c.g = g	c.b = b	S.ClassColor[i[#i]] = nilendfunction KCL:SetSchoolColor(i, r, g, b)	self:SetColor(i, r,g,b)	S.SpellSchoolColor[S.RemapSchoolColorRev[i[#i]]] = nilend	------------	--- Main ---	------------do	local o = options.args.Main.args.Local.args		for i, v in ipairs(S.Event) do		o["Local"..v] = {			type = "toggle", order = i*2,			descStyle = "",			name = function() return format("|TInterface\\Icons\\%s:16:16:1:0%s|t  |cff%s%s|r", S.EventString[v][2], S.crop, S.GeneralColor[v], S.EventString[v][1]) end,		}	end		for i = 1, 4 do -- 5, 9, 13, ...		o["newline"..i] = {type = "description", order = 1+i*4, name = ""}	endenddo	local o = options.args.Main.args.Chat.args		for i, v in ipairs(S.Event) do		o["Chat"..v] = {			type = "toggle", order = i*2,			descStyle = "",			name = function() return format("|TInterface\\Icons\\%s:16:16:1:0%s|t  |cff%s%s|r", S.EventString[v][2], S.crop, S.GeneralColor[v], S.EventString[v][1]) end,		}	end		for i = 1, 4 do		o["newline"..i] = {type = "description", order = 1+i*4, name = ""}	endend	----------------	--- Advanced ---	----------------do	local o = options.args.Advanced.args.Coloring.args		for i, v in ipairs(S.Event) do		o[v] = {			type = "color", order = 2+i, -- 3-12			name = format("|TInterface\\Icons\\%s:16:16:1:0%s|t  %s", S.EventString[v][2], S.crop, S.EventString[v][1]),			set = "SetGeneralColor",		}	end		if CUSTOM_CLASS_COLORS then		o.notification = {			type = "description", order = 21,			fontSize = "large",			name = L.USE_CLASS_COLORS,		}	else		for i, v in ipairs(S.Class) do			o[v] = {				type = "color", order = 20+i, -- 21-31				name = format("|TInterface\\GLUES\\CHARACTERCREATE\\UI-CHARACTERCREATE-CLASSES:16:16:1:0:%s|t  %s", S.ClassCoords[v], LOCALIZED_CLASS_NAMES_MALE[v]),				get = "GetClassColor",				set = "SetClassColor",			}		end	end		for i, v in pairs(S.School) do		o[v] = {			type = "color", order = 40+i, -- 41-47			name = format("|TInterface\\PaperDollInfoFrame\\SpellSchoolIcon%s:16:16:1:0%s|t  %s", S.SchoolRemap[v], S.crop, S.SchoolString[v]),			set = "SetClassColor",		}	end		for i, v in ipairs{2, 20, 40, 50, 54} do		o["header"..i] = {type = "header", order = v, name = ""}	endenddo	local o = options.args.Advanced.args.Message.args		for i, v in ipairs(S.EventMsg) do		o[v] = {			type = "input", order = i,			width = "full", descStyle = "",			name = format("  |TInterface\\Icons\\%s:16:16:1:0%s|t  %s", S.EventString[v][2], S.crop, S.EventString[v][1]),		}	end		o.Growl.hidden = function() return not profile.PetGrowl endend	---------------	--- LibSink ---	---------------local libsink = options.args.Advanced.args.LibSinklibsink.name = "|TInterface\\Icons\\INV_Elemental_Primal_Water:14:14:1:0"..S.crop.."|t  |cffFFFFFFLibSink|r"libsink.order = 5